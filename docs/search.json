[{"path":"/articles/Documentation.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Documentation","text":"anything, make sure DependencyReviewer package installed.","code":""},{"path":"/articles/Documentation.html","id":"remotes","dir":"Articles","previous_headings":"Installation","what":"remotes","title":"Documentation","text":"latest version usually available GitHub, installable remotes package.","code":"# If you do not have remotes installed: install.packages(\"remotes\")  # Install DependencyReviewer with remotes: remotes::install_github(\"darwin-eu/DependencyReviewer\")"},{"path":"/articles/Documentation.html","id":"install-packages","dir":"Articles","previous_headings":"Installation","what":"install.packages","title":"Documentation","text":"DependencyReviewer 1.0.0 also available CRAN, can installed using install.packages well.","code":"install.packages(\"DependencyReviewer\")"},{"path":[]},{"path":"/articles/Documentation.html","id":"load-packages","dir":"Articles","previous_headings":"Usage","what":"Load packages","title":"Documentation","text":"","code":"library(DependencyReviewer)  # Other packages that are used in the examples library(DT) library(ggplot2) #> Warning: package 'ggplot2' was built under R version 4.2.2 library(dplyr) library(igraph) library(GGally) #> Warning: package 'GGally' was built under R version 4.2.2"},{"path":[]},{"path":"/articles/Documentation.html","id":"what-does-it-do","dir":"Articles","previous_headings":"Usage > getDefaultPermittedPackages","what":"What does it do?","title":"Documentation","text":"getDefaultPermittedPackages function retrieves list packages several ,- offline data sources. data sources include: Base packages high priority installed.packages(lib.loc = .Library, priority = \"high\") Tidyverse packages OHDSI/HADES packages Packages hosted DependencyReviewerWhitelists repository Finally function also retrieve defined packages’ dependencies recursively, add list. packages deemed OK use. list , change overtime packages become outdated, get replaced, added list.","code":""},{"path":"/articles/Documentation.html","id":"what-does-it-need","dir":"Articles","previous_headings":"Usage > getDefaultPermittedPackages","what":"What does it need?","title":"Documentation","text":"getDefaultPermittedPackages require arguments.","code":""},{"path":"/articles/Documentation.html","id":"what-does-it-return","dir":"Articles","previous_headings":"Usage > getDefaultPermittedPackages","what":"What does it return?","title":"Documentation","text":"getDefaultPermittedPackages returns class data.frame columns: package  version","code":"datatable(getDefaultPermittedPackages()) #>   [36mℹ [39m Loading metadata database   [36mℹ [39m Loading metadata database   [32m✔ [39m Loading metadata database ... done   [32m✔ [39m Loading metadata database ... done #>  #> Writing temp file"},{"path":[]},{"path":"/articles/Documentation.html","id":"what-does-it-do-1","dir":"Articles","previous_headings":"Usage > checkDependencies","what":"What does it do?","title":"Documentation","text":"Now defined ‘whitelisted’ packages, checkDependencies allows us check currently used dependencies . checkDependencies run getDefaultPermittedPackages internally need run two separately check dependencies white list.","code":""},{"path":"/articles/Documentation.html","id":"what-does-it-need-1","dir":"Articles","previous_headings":"Usage > checkDependencies","what":"What does it need?","title":"Documentation","text":"checkDependencies two optional arguments: packageName default (NULL): Expects character string package name. Example: “ggplot2”. dependencyType default (c(\"Imports\", \"Depends\")): Expects character vector least length 1 dependency types. supported types : “Imports”, “Depends”, “Suggests”. arguments optional can also run without specifying anything. function assume run inside package-project environment. specifically useful working , reviewing package.","code":""},{"path":"/articles/Documentation.html","id":"what-does-it-return-1","dir":"Articles","previous_headings":"Usage > checkDependencies","what":"What does it return?","title":"Documentation","text":"checkDependencies prints message console informs user used package dependencies whitelisted . instructs user go request packages whitelisted. packages approved yet: can see, returns list packages white listed. list display information markdown table format. come handy later . table six columns: 1) package, 2) version, 3) date, 4) downloads_last_month, 5) license, 6) url. Note packages available CRAN reported table. Non-CRAN packages still show list. packages approved: Notice “Imports” “Depends” packages CDMConnector whitelisted, “Suggests” packages .","code":"# Assumes the current environment is a package-project # Defaults are: packageName = NULL, packageTypes = c(\"Imports\", \"Depends\") checkDependencies()  # Check dependencies for installed package \"CDMConnector\" checkDependencies(   packageName = \"CDMConnector\") # Check Imports and Suggests checkDependencies(   packageName = \"CDMConnector\",   dependencyType = c(\"Imports\", \"Suggests\")) #> Get from temp file #>  #> ── Checking if packages in Imports and Suggests have been approved ── #>  #> ! Found 5 packages in Imports and Suggests that are not #> approved #> →   1) covr #> →   2) duckdb #> →   3) odbc #> →   4) RPostgres #> →   5) testthat #> ! Please create a new issue at https://github.com/mvankessel-EMC/DependencyReviewerWhitelists/ to request approval for packages with the following message: #> → |package   |version |date                | downloads_last_month|license            |url                                                             | #> |:---------|:-------|:-------------------|--------------------:|:------------------|:---------------------------------------------------------------| #> |covr      |3.6.1   |2022-08-26 19:24:34 |               264276|MIT + file LICENSE |https://covr.r-lib.org, https://github.com/r-lib/covr           | #> |duckdb    |0.6.0   |2022-11-25 12:20:02 |                10400|MIT + file LICENSE |https://duckdb.org/, https://github.com/duckdb/duckdb           | #> |odbc      |1.3.3   |2021-11-30 08:10:02 |                95759|MIT + file LICENSE |https://github.com/r-dbi/odbc, https://db.rstudio.com           | #> |RPostgres |1.4.4   |2022-05-02 07:50:05 |                54100|GPL-3              |https://rpostgres.r-dbi.org, https://github.com/r-dbi/RPostgres | #> |testthat  |3.1.5   |2022-10-08 05:40:02 |               907811|MIT + file LICENSE |https://testthat.r-lib.org, https://github.com/r-lib/testthat   | # Only check directly imported dependencies of installed package \"CDMConnector\" checkDependencies(   packageName = \"CDMConnector\",   dependencyType = c(\"Imports\")) #> Get from temp file #>  #> ── Checking if package in Imports have been approved ── #>  #> ✔ All package in Imports are  already approved"},{"path":"/articles/Documentation.html","id":"requesting-packages-to-be-whitelisted","dir":"Articles","previous_headings":"Usage","what":"Requesting packages to be whitelisted","title":"Documentation","text":"find packages yet whitelisted, can request . DependencyReviewerWhitelists repository GitHub houses white list DependencyReviewer. request new packages new issue can created repository. Assuming following output checkDependencies: creating new issue, request template available. Request template button template asks basic information requested packages, reason requested packages whitelisted. Request template Initially displays dummy information request might look like. Firstly asks us supply table markdown format basic information packages. can copy output message checkDependencies function. asks us give description like packages whitelisted. Finally, can add additional information required. Request filled can preview request issue: Request preview everything looks good, can submit issue.","code":"Get from temp file  ── Checking if packages in Imports and Suggests have been approved ──  ! Found 3 packages in Imports and Suggests that are not approved →   1) GGally →   2) lintr →   3) pak ! Please create a new issue at https://github.com/mvankessel-EMC/DependencyReviewerWhitelists/ to request approval for packages with the following message: |package |version |date                | downloads_last_month|license            |url                                                              | |:-------|:-------|:-------------------|--------------------:|:------------------|:----------------------------------------------------------------| |GGally  |2.1.2   |2021-06-21 03:40:10 |                86657|GPL (>= 2.0)       |https://ggobi.github.io/ggally/, https://github.com/ggobi/ggally | |lintr   |3.0.2   |2022-10-19 08:52:37 |                61729|MIT + file LICENSE |https://github.com/r-lib/lintr, https://lintr.r-lib.org          | |pak     |0.3.1   |2022-09-08 20:30:02 |                39420|GPL-3              |https://pak.r-lib.org/                                           |"},{"path":[]},{"path":"/articles/Documentation.html","id":"what-does-it-do-2","dir":"Articles","previous_headings":"Usage > summariseFunctionUse","what":"What does it do?","title":"Documentation","text":"summariseFunctionUse goes specified R-files attempts list functions used files. also report file function found, line number function call found, package function comes .","code":""},{"path":"/articles/Documentation.html","id":"what-does-it-need-2","dir":"Articles","previous_headings":"Usage > summariseFunctionUse","what":"What does it need?","title":"Documentation","text":"summariseFunctionUse several optional arguments: r_files default (list.files(::(“R”))): in_package = TRUE expects character vector least length 1 file names /R/ folder. in_package == FALSE expects full paths R-files. verbose default (FALSE): verbose = TRUE print messages console file function currently working. Useful reviewing large R-files. verbose = FALSE print said messages. in_package default (TRUE): in_package = TRUE expect function run inside package-project. in_package = FALSE expect function run outside package-project expect full file paths files reviewed. default summariseFunctionUse expect ran inside package-project look /R/ folder inside project.","code":""},{"path":"/articles/Documentation.html","id":"what-does-it-return-2","dir":"Articles","previous_headings":"Usage > summariseFunctionUse","what":"What does it return?","title":"Documentation","text":"summariseFunctionUse returns class data.frame following columns: 1) r_file, 1) line, 1) pkg, 1) fun. found functions can plotted package. sake demonstration, packages plotted.","code":"# Assumes the function is run inside a package-project. datatable(   summariseFunctionUse()) # Any other R-file, with verbose messages foundFuns <- summariseFunctionUse(     r_files = \"../../CDMConnector/R/cdm.R\",     verbose = TRUE,     in_package = FALSE) #> Started on file: ../../CDMConnector/R/cdm.R  datatable(foundFuns) funCounts <- foundFuns %>%   group_by(fun, pkg, name = \"n\") %>%   tally() %>%   filter(pkg %in% c(\"checkmate\", \"DBI\", \"dplyr\"))  ggplot(   data = funCounts,    mapping = aes(x = fun, y = n, fill = pkg)) +   geom_col() +   facet_wrap(     vars(pkg),      scales = \"free_x\",      ncol = 1) +   theme_bw() +   theme(     legend.position = \"none\",     axis.text.x = (element_text(angle = 45, hjust = 1, vjust = 1)))"},{"path":[]},{"path":"/articles/Documentation.html","id":"what-does-it-do-3","dir":"Articles","previous_headings":"Usage > getGraphData","what":"What does it do?","title":"Documentation","text":"getGraphData","code":""},{"path":"/articles/Documentation.html","id":"what-does-it-need-3","dir":"Articles","previous_headings":"Usage > getGraphData","what":"What does it need?","title":"Documentation","text":"getGraphData three optional parameters: path default (::()): Path package get graph data . default assumes function ran inside package-project. excluded_packages default (c(““)): character vector packages excluded. default empty. package_types default (c(“imports”, “depends”)): Package dependency types included. default imports depends included. Availible types : 1) “imports”, 2) “depends”, 3) “suggests”, 4) “enhances”, 5) “linkingto” Without specified, getGraphData function assumes ran inside package-project.","code":""},{"path":"/articles/Documentation.html","id":"what-does-it-return-3","dir":"Articles","previous_headings":"Usage > getGraphData","what":"What does it return?","title":"Documentation","text":"getGraphData returns class igraph. amount dependencies graph quickly get hand, suggested either filter igraph object fact, look one kind package type. following example ’ll look “Imports” keeps things simple. plotted like :","code":"graphData <- getGraphData() # Get graphData with only imports graphData <- getGraphData(package_types = c(\"imports\"))  # Calculate colour of nodes based on distances from root package cols <- factor(as.character(apply(   X = distances(graphData, V(graphData)[1]),   MARGIN = 2,   FUN = max )))  # Plot graph ggnet2(   net = graphData,   arrow.size = 1,   arrow.gap = 0.025,   label = TRUE,   palette = \"Set2\",   color.legend = \"distance\",   color = cols,   legend.position = \"bottom\",   edge.alpha = 0.25,   node.size = 2.5,   label.size = 1,   legend.size = 2 )"},{"path":[]},{"path":"/articles/Documentation.html","id":"what-does-it-do-4","dir":"Articles","previous_headings":"Usage > runShiny","what":"What does it do?","title":"Documentation","text":"runShiny runs local shiny app houses mentioned functionality one environment. runSHiny assumes ran inside package-project.","code":""},{"path":"/articles/Documentation.html","id":"what-does-it-need-4","dir":"Articles","previous_headings":"Usage > runShiny","what":"What does it need?","title":"Documentation","text":"runShiny Takes arguments","code":""},{"path":"/articles/Documentation.html","id":"what-does-it-return-4","dir":"Articles","previous_headings":"Usage > runShiny","what":"What does it return?","title":"Documentation","text":"runShiny returns class shiny.appobj. shiny application three main tabs: 1) Package review, 2) Dependency Graph, 3) Path dependency. Package review package review tab three main panels. Settings: settings two parts panel: file picker, tick boxes packages. Currently files summariseFunctionUse table. summariseFunctionUse table plot: summariseFunctionUse table specified files, files picked file picker settings. Script preview: preview contents selected file. chosen, dummy script appear, last viewed contents stay. Function review Package review Function review plot Lets say base functions interesting use case, can tick base tick box Exclude Packages settings. Package review base packages now excluded summariseFunctionUse table plot. Package review Dependency Graph Package review Path dependency path dependency tab displays root package depends recursive dependency. Package review","code":"runShiny()"},{"path":[]},{"path":"/articles/Documentation.html","id":"what-does-it-do-5","dir":"Articles","previous_headings":"Usage > darwinLintFile","what":"What does it do?","title":"Documentation","text":"darwinLintFile extension default Lintr object, instead snake_case, uses camelCase. name suggest run lintr specified file.","code":""},{"path":"/articles/Documentation.html","id":"what-does-it-need-5","dir":"Articles","previous_headings":"Usage > darwinLintFile","what":"What does it need?","title":"Documentation","text":"darwinLintFile takes one parameter: 1. fileName: Path R-file.","code":""},{"path":"/articles/Documentation.html","id":"what-does-it-return-5","dir":"Articles","previous_headings":"Usage > darwinLintFile","what":"What does it return?","title":"Documentation","text":"returns class lints. However output lintr function can cast data.frame. can manipulated get summary lint messages.","code":"lintOut <- data.frame(   darwinLintFile(     fileName = \"../../CDMConnector/R/cdm.R\")) lintOut %>%   group_by(type, message) %>%   tally(sort = TRUE) %>%   datatable()"},{"path":[]},{"path":"/articles/Documentation.html","id":"what-does-it-do-6","dir":"Articles","previous_headings":"Usage > darwinLintPackage","what":"What does it do?","title":"Documentation","text":"darwinLintPackage extension default Lintr object, instead snake_case, uses camelCase. unlike darwinLintFile, run lintr entire package. Therefore assume function ran inside package-project.","code":""},{"path":"/articles/Documentation.html","id":"what-does-it-need-6","dir":"Articles","previous_headings":"Usage > darwinLintPackage","what":"What does it need?","title":"Documentation","text":"darwinLintPackage take arguments.","code":""},{"path":"/articles/Documentation.html","id":"what-does-it-return-6","dir":"Articles","previous_headings":"Usage > darwinLintPackage","what":"What does it return?","title":"Documentation","text":"returns class lints.","code":""},{"path":[]},{"path":"/articles/Documentation.html","id":"what-does-it-do-7","dir":"Articles","previous_headings":"Usage > darwinLintScore","what":"What does it do?","title":"Documentation","text":"darwinLintScore calculates percentage per type lint-message lintr. percentage calculated : \\[darwinLintScore_{type} = {n_{messages} \\n_{lines}} \\times 100 \\] #### need? darwinLintScore takes one predefined argument: 1. lintFunction: lint function extended lintr::lint_package lintr::lint 2. …: arguments lint function might need","code":""},{"path":"/articles/Documentation.html","id":"what-does-it-return-7","dir":"Articles","previous_headings":"Usage > darwinLintScore","what":"What does it return?","title":"Documentation","text":"Returns class data.frame two columns: 1) type, 2) pct. also print colour coded messages percentages per message type.","code":"darwinLintScore(darwinLintPackage) i style: 5.9% of lines of code have linting messages i warning: 0.95% of lines of code have linting messages"},{"path":"/articles/Vignette-DependencyReviewer.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Vignette: DependencyReviewer","text":"anything, make sure DependencyReviewer package installed.","code":""},{"path":"/articles/Vignette-DependencyReviewer.html","id":"remotes","dir":"Articles","previous_headings":"Installation","what":"remotes","title":"Vignette: DependencyReviewer","text":"latest version usually available GitHub, installable remotes package.","code":"# If you do not have remotes installed: install.packages(\"remotes\")  # Install DependencyReviewer with remotes: remotes::install_github(\"darwin-eu/DependencyReviewer\")"},{"path":"/articles/Vignette-DependencyReviewer.html","id":"install-packages","dir":"Articles","previous_headings":"Installation","what":"install.packages","title":"Vignette: DependencyReviewer","text":"DependencyReviewer 1.0.0 also available CRAN, can installed using install.packages well.","code":"install.packages(\"DependencyReviewer\")"},{"path":[]},{"path":"/articles/Vignette-DependencyReviewer.html","id":"load-packages","dir":"Articles","previous_headings":"Usage","what":"Load packages","title":"Vignette: DependencyReviewer","text":"","code":"library(DependencyReviewer)  # Other packages that are used in the examples library(DT) library(ggplot2) #> Warning: package 'ggplot2' was built under R version 4.2.2 library(dplyr) library(igraph) library(GGally) #> Warning: package 'GGally' was built under R version 4.2.2"},{"path":[]},{"path":"/articles/Vignette-DependencyReviewer.html","id":"what-does-it-do","dir":"Articles","previous_headings":"Usage > getDefaultPermittedPackages","what":"What does it do?","title":"Vignette: DependencyReviewer","text":"getDefaultPermittedPackages function retrieves list packages several ,- offline data sources. data sources include: Base packages high priority installed.packages(lib.loc = .Library, priority = \"high\") Tidyverse packages OHDSI/HADES packages Packages hosted DependencyReviewerWhitelists repository Finally function also retrieve defined packages’ dependencies recursively, add list. packages deemed OK use. list , change overtime packages become outdated, get replaced, added list.","code":""},{"path":"/articles/Vignette-DependencyReviewer.html","id":"what-does-it-need","dir":"Articles","previous_headings":"Usage > getDefaultPermittedPackages","what":"What does it need?","title":"Vignette: DependencyReviewer","text":"getDefaultPermittedPackages require arguments.","code":""},{"path":"/articles/Vignette-DependencyReviewer.html","id":"what-does-it-return","dir":"Articles","previous_headings":"Usage > getDefaultPermittedPackages","what":"What does it return?","title":"Vignette: DependencyReviewer","text":"getDefaultPermittedPackages returns class data.frame columns: package  version","code":"datatable(getDefaultPermittedPackages()) #>       [32m✔ [39m Updated metadata database: 4.42 MB in 4 files.   [32m✔ [39m Updated metadata database: 4.42 MB in 4 files. #>  #>   [36mℹ [39m Updating metadata database   [36mℹ [39m Updating metadata database   [32m✔ [39m Updating metadata database ... done   [32m✔ [39m Updating metadata database ... done #>  #> Writing temp file"},{"path":[]},{"path":"/articles/Vignette-DependencyReviewer.html","id":"what-does-it-do-1","dir":"Articles","previous_headings":"Usage > checkDependencies","what":"What does it do?","title":"Vignette: DependencyReviewer","text":"Now defined ‘whitelisted’ packages, checkDependencies allows us check currently used dependencies . checkDependencies run getDefaultPermittedPackages internally need run two separately check dependencies white list.","code":""},{"path":"/articles/Vignette-DependencyReviewer.html","id":"what-does-it-need-1","dir":"Articles","previous_headings":"Usage > checkDependencies","what":"What does it need?","title":"Vignette: DependencyReviewer","text":"checkDependencies two optional arguments: packageName default (NULL): Expects character string package name. Example: “ggplot2”. dependencyType default (c(\"Imports\", \"Depends\")): Expects character vector least length 1 dependency types. supported types : “Imports”, “Depends”, “Suggests”. arguments optional can also run without specifying anything. function assume run inside package-project environment. specifically useful working , reviewing package.","code":""},{"path":"/articles/Vignette-DependencyReviewer.html","id":"what-does-it-return-1","dir":"Articles","previous_headings":"Usage > checkDependencies","what":"What does it return?","title":"Vignette: DependencyReviewer","text":"checkDependencies prints message console informs user used package dependencies whitelisted . instructs user go request packages whitelisted. packages approved yet: can see, returns list packages white listed. list display information markdown table format. come handy later . table six columns: 1) package, 2) version, 3) date, 4) downloads_last_month, 5) license, 6) url. Note packages available CRAN reported table. Non-CRAN packages still show list. packages approved: Notice “Imports” “Depends” packages CDMConnector whitelisted, “Suggests” packages .","code":"# Assumes the current environment is a package-project # Defaults are: packageName = NULL, packageTypes = c(\"Imports\", \"Depends\") checkDependencies()  # Check dependencies for installed package \"CDMConnector\" checkDependencies(   packageName = \"CDMConnector\") # Check Imports and Suggests checkDependencies(   packageName = \"CDMConnector\",   dependencyType = c(\"Imports\", \"Suggests\")) #> Get from temp file #>  #> ── Checking if packages in Imports and Suggests have been approved ── #>  #> ! Found 5 packages in Imports and Suggests that are not #> approved #> →   1) covr #> →   2) duckdb #> →   3) odbc #> →   4) RPostgres #> →   5) testthat #> ! Please create a new issue at https://github.com/mvankessel-EMC/DependencyReviewerWhitelists/ to request approval for packages with the following message: #> → |package   |version |date                | downloads_last_month|license            |url                                                             | #> |:---------|:-------|:-------------------|--------------------:|:------------------|:---------------------------------------------------------------| #> |covr      |3.6.1   |2022-08-26 19:24:34 |               264276|MIT + file LICENSE |https://covr.r-lib.org, https://github.com/r-lib/covr           | #> |duckdb    |0.6.0   |2022-11-25 12:20:02 |                10400|MIT + file LICENSE |https://duckdb.org/, https://github.com/duckdb/duckdb           | #> |odbc      |1.3.3   |2021-11-30 08:10:02 |                95759|MIT + file LICENSE |https://github.com/r-dbi/odbc, https://db.rstudio.com           | #> |RPostgres |1.4.4   |2022-05-02 07:50:05 |                54100|GPL-3              |https://rpostgres.r-dbi.org, https://github.com/r-dbi/RPostgres | #> |testthat  |3.1.5   |2022-10-08 05:40:02 |               907811|MIT + file LICENSE |https://testthat.r-lib.org, https://github.com/r-lib/testthat   | # Only check directly imported dependencies of installed package \"CDMConnector\" checkDependencies(   packageName = \"CDMConnector\",   dependencyType = c(\"Imports\")) #> Get from temp file #>  #> ── Checking if package in Imports have been approved ── #>  #> ✔ All package in Imports are  already approved"},{"path":"/articles/Vignette-DependencyReviewer.html","id":"requesting-packages-to-be-whitelisted","dir":"Articles","previous_headings":"Usage","what":"Requesting packages to be whitelisted","title":"Vignette: DependencyReviewer","text":"find packages yet whitelisted, can request . DependencyReviewerWhitelists repository GitHub houses white list DependencyReviewer. request new packages new issue can created repository. Assuming following output checkDependencies: creating new issue, request template available. Request template button template asks basic information requested packages, reason requested packages whitelisted. Request template Initially displays dummy information request might look like. Firstly asks us supply table markdown format basic information packages. can copy output message checkDependencies function. asks us give description like packages whitelisted. Finally, can add additional information required. Request filled can preview request issue: Request preview everything looks good, can submit issue.","code":"Get from temp file  ── Checking if packages in Imports and Suggests have been approved ──  ! Found 3 packages in Imports and Suggests that are not approved →   1) GGally →   2) lintr →   3) pak ! Please create a new issue at https://github.com/mvankessel-EMC/DependencyReviewerWhitelists/ to request approval for packages with the following message: |package |version |date                | downloads_last_month|license            |url                                                              | |:-------|:-------|:-------------------|--------------------:|:------------------|:----------------------------------------------------------------| |GGally  |2.1.2   |2021-06-21 03:40:10 |                86657|GPL (>= 2.0)       |https://ggobi.github.io/ggally/, https://github.com/ggobi/ggally | |lintr   |3.0.2   |2022-10-19 08:52:37 |                61729|MIT + file LICENSE |https://github.com/r-lib/lintr, https://lintr.r-lib.org          | |pak     |0.3.1   |2022-09-08 20:30:02 |                39420|GPL-3              |https://pak.r-lib.org/                                           |"},{"path":[]},{"path":"/articles/Vignette-DependencyReviewer.html","id":"what-does-it-do-2","dir":"Articles","previous_headings":"Usage > summariseFunctionUse","what":"What does it do?","title":"Vignette: DependencyReviewer","text":"summariseFunctionUse goes specified R-files attempts list functions used files. also report file function found, line number function call found, package function comes .","code":""},{"path":"/articles/Vignette-DependencyReviewer.html","id":"what-does-it-need-2","dir":"Articles","previous_headings":"Usage > summariseFunctionUse","what":"What does it need?","title":"Vignette: DependencyReviewer","text":"summariseFunctionUse several optional arguments: r_files default (list.files(::(“R”))): in_package = TRUE expects character vector least length 1 file names /R/ folder. in_package == FALSE expects full paths R-files. verbose default (FALSE): verbose = TRUE print messages console file function currently working. Useful reviewing large R-files. verbose = FALSE print said messages. in_package default (TRUE): in_package = TRUE expect function run inside package-project. in_package = FALSE expect function run outside package-project expect full file paths files reviewed. default summariseFunctionUse expect ran inside package-project look /R/ folder inside project.","code":""},{"path":"/articles/Vignette-DependencyReviewer.html","id":"what-does-it-return-2","dir":"Articles","previous_headings":"Usage > summariseFunctionUse","what":"What does it return?","title":"Vignette: DependencyReviewer","text":"summariseFunctionUse returns class data.frame following columns: 1) r_file, 1) line, 1) pkg, 1) fun. found functions can plotted package. sake demonstration, packages plotted.","code":"# Assumes the function is run inside a package-project. datatable(   summariseFunctionUse()) # Any other R-file, with verbose messages foundFuns <- summariseFunctionUse(     r_files = \"../../CDMConnector/R/cdm.R\",     verbose = TRUE,     in_package = FALSE) #> Started on file: ../../CDMConnector/R/cdm.R  datatable(foundFuns) funCounts <- foundFuns %>%   group_by(fun, pkg, name = \"n\") %>%   tally() %>%   filter(pkg %in% c(\"checkmate\", \"DBI\", \"dplyr\"))  ggplot(   data = funCounts,    mapping = aes(x = fun, y = n, fill = pkg)) +   geom_col() +   facet_wrap(     vars(pkg),      scales = \"free_x\",      ncol = 1) +   theme_bw() +   theme(     legend.position = \"none\",     axis.text.x = (element_text(angle = 45, hjust = 1, vjust = 1)))"},{"path":[]},{"path":"/articles/Vignette-DependencyReviewer.html","id":"what-does-it-do-3","dir":"Articles","previous_headings":"Usage > getGraphData","what":"What does it do?","title":"Vignette: DependencyReviewer","text":"getGraphData","code":""},{"path":"/articles/Vignette-DependencyReviewer.html","id":"what-does-it-need-3","dir":"Articles","previous_headings":"Usage > getGraphData","what":"What does it need?","title":"Vignette: DependencyReviewer","text":"getGraphData three optional parameters: path default (::()): Path package get graph data . default assumes function ran inside package-project. excluded_packages default (c(““)): character vector packages excluded. default empty. package_types default (c(“imports”, “depends”)): Package dependency types included. default imports depends included. Availible types : 1) “imports”, 2) “depends”, 3) “suggests”, 4) “enhances”, 5) “linkingto” Without specified, getGraphData function assumes ran inside package-project.","code":""},{"path":"/articles/Vignette-DependencyReviewer.html","id":"what-does-it-return-3","dir":"Articles","previous_headings":"Usage > getGraphData","what":"What does it return?","title":"Vignette: DependencyReviewer","text":"getGraphData returns class igraph. amount dependencies graph quickly get hand, suggested either filter igraph object fact, look one kind package type. following example ’ll look “Imports” keeps things simple. plotted like :","code":"graphData <- getGraphData() # Get graphData with only imports graphData <- getGraphData(package_types = c(\"imports\"))  # Calculate colour of nodes based on distances from root package cols <- factor(as.character(apply(   X = distances(graphData, V(graphData)[1]),   MARGIN = 2,   FUN = max )))  # Plot graph ggnet2(   net = graphData,   arrow.size = 1,   arrow.gap = 0.025,   label = TRUE,   palette = \"Set2\",   color.legend = \"distance\",   color = cols,   legend.position = \"bottom\",   edge.alpha = 0.25,   node.size = 2.5,   label.size = 1,   legend.size = 2 )"},{"path":[]},{"path":"/articles/Vignette-DependencyReviewer.html","id":"what-does-it-do-4","dir":"Articles","previous_headings":"Usage > runShiny","what":"What does it do?","title":"Vignette: DependencyReviewer","text":"runShiny runs local shiny app houses mentioned functionality one environment. runSHiny assumes ran inside package-project.","code":""},{"path":"/articles/Vignette-DependencyReviewer.html","id":"what-does-it-need-4","dir":"Articles","previous_headings":"Usage > runShiny","what":"What does it need?","title":"Vignette: DependencyReviewer","text":"runShiny Takes arguments","code":""},{"path":"/articles/Vignette-DependencyReviewer.html","id":"what-does-it-return-4","dir":"Articles","previous_headings":"Usage > runShiny","what":"What does it return?","title":"Vignette: DependencyReviewer","text":"runShiny returns class shiny.appobj. shiny application three main tabs: 1) Package review, 2) Dependency Graph, 3) Path dependency. Package review package review tab three main panels. Settings: settings two parts panel: file picker, tick boxes packages. Currently files summariseFunctionUse table. summariseFunctionUse table plot: summariseFunctionUse table specified files, files picked file picker settings. Script preview: preview contents selected file. chosen, dummy script appear, last viewed contents stay. Function review Package review Function review plot Lets say base functions interesting use case, can tick base tick box Exclude Packages settings. Package review base packages now excluded summariseFunctionUse table plot. Package review Dependency Graph Package review Path dependency path dependency tab displays root package depends recursive dependency. Package review","code":"runShiny()"},{"path":[]},{"path":"/articles/Vignette-DependencyReviewer.html","id":"what-does-it-do-5","dir":"Articles","previous_headings":"Usage > darwinLintFile","what":"What does it do?","title":"Vignette: DependencyReviewer","text":"darwinLintFile extension default Lintr object, instead snake_case, uses camelCase. name suggest run lintr specified file.","code":""},{"path":"/articles/Vignette-DependencyReviewer.html","id":"what-does-it-need-5","dir":"Articles","previous_headings":"Usage > darwinLintFile","what":"What does it need?","title":"Vignette: DependencyReviewer","text":"darwinLintFile takes one parameter: 1. fileName: Path R-file.","code":""},{"path":"/articles/Vignette-DependencyReviewer.html","id":"what-does-it-return-5","dir":"Articles","previous_headings":"Usage > darwinLintFile","what":"What does it return?","title":"Vignette: DependencyReviewer","text":"returns class lints. However output lintr function can cast data.frame. can manipulated get summary lint messages.","code":"lintOut <- data.frame(   darwinLintFile(     fileName = \"../../CDMConnector/R/cdm.R\")) lintOut %>%   group_by(type, message) %>%   tally(sort = TRUE) %>%   datatable()"},{"path":[]},{"path":"/articles/Vignette-DependencyReviewer.html","id":"what-does-it-do-6","dir":"Articles","previous_headings":"Usage > darwinLintPackage","what":"What does it do?","title":"Vignette: DependencyReviewer","text":"darwinLintPackage extension default Lintr object, instead snake_case, uses camelCase. unlike darwinLintFile, run lintr entire package. Therefore assume function ran inside package-project.","code":""},{"path":"/articles/Vignette-DependencyReviewer.html","id":"what-does-it-need-6","dir":"Articles","previous_headings":"Usage > darwinLintPackage","what":"What does it need?","title":"Vignette: DependencyReviewer","text":"darwinLintPackage take arguments.","code":""},{"path":"/articles/Vignette-DependencyReviewer.html","id":"what-does-it-return-6","dir":"Articles","previous_headings":"Usage > darwinLintPackage","what":"What does it return?","title":"Vignette: DependencyReviewer","text":"returns class lints.","code":""},{"path":[]},{"path":"/articles/Vignette-DependencyReviewer.html","id":"what-does-it-do-7","dir":"Articles","previous_headings":"Usage > darwinLintScore","what":"What does it do?","title":"Vignette: DependencyReviewer","text":"darwinLintScore calculates percentage per type lint-message lintr. percentage calculated : \\[darwinLintScore_{type} = {n_{messages} \\n_{lines}} \\times 100 \\] #### need? darwinLintScore takes one predefined argument: 1. lintFunction: lint function extended lintr::lint_package lintr::lint 2. …: arguments lint function might need","code":""},{"path":"/articles/Vignette-DependencyReviewer.html","id":"what-does-it-return-7","dir":"Articles","previous_headings":"Usage > darwinLintScore","what":"What does it return?","title":"Vignette: DependencyReviewer","text":"Returns class data.frame two columns: 1) type, 2) pct. also print colour coded messages percentages per message type.","code":"darwinLintScore(darwinLintPackage) i style: 5.9% of lines of code have linting messages i warning: 0.95% of lines of code have linting messages"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maarten van Kessel. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"van Kessel M (2022). DependencyReviewer: Tool Suite Investigate R package dependencies. R package version 1.0.0.","code":"@Manual{,   title = {DependencyReviewer: Tool Suite to Investigate R package dependencies},   author = {Maarten {van Kessel}},   year = {2022},   note = {R package version 1.0.0}, }"},{"path":"/index.html","id":"dependencyreviewer","dir":"","previous_headings":"","what":"Tool Suite to Investigate R package dependencies","title":"Tool Suite to Investigate R package dependencies","text":"DependenyReviewer package Helps investigating packages code review looking dependencies.","code":""},{"path":"/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Tool Suite to Investigate R package dependencies","text":"Check used dependencies Darwin-EU white list. Easily review function use per dependency package. easy way get graph data dependencies see package depends (transitive) dependencies. Use predefined Darwin Lint functions lint package. Easily calculate percentages many style, warning, error messages encountered across package. shiny app interactively investigate package.","code":""},{"path":"/index.html","id":"installation-","dir":"","previous_headings":"","what":"Installation","title":"Tool Suite to Investigate R package dependencies","text":"can install development version DependencyReviewer like : DependencyReviewer now available CRAN.","code":"install.packages(\"remotes\") remotes::install_github(\"darwin-eu/DependencyReviewer\") install.packages(\"DependencyReviewer\")"},{"path":"/index.html","id":"features-wishlist","dir":"","previous_headings":"","what":"Features wishlist","title":"Tool Suite to Investigate R package dependencies","text":"Show lintr output shinyApp Show test coverage shinyApp Include spelling checking using spelling::spell_check_package automated way ‘plot’ package functions (UML-like).","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"/reference/checkDependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"checkDependencies — checkDependencies","title":"checkDependencies — checkDependencies","text":"Check package dependencies","code":""},{"path":"/reference/checkDependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"checkDependencies — checkDependencies","text":"","code":"checkDependencies(packageName = NULL, dependencyType = c(\"Imports\", \"Depends\"))"},{"path":"/reference/checkDependencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"checkDependencies — checkDependencies","text":"packageName Name package profile. NULL current package dependencyType Imports, depends, / suggests","code":""},{"path":"/reference/checkDependencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"checkDependencies — checkDependencies","text":"Returns value NULL","code":""},{"path":"/reference/checkDependencies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"checkDependencies — checkDependencies","text":"","code":"# Run only in interactive session if (interactive()) {   checkDependencies(packageName = \"DependencyReviewer\")    checkDependencies(packageName = \"DependencyReviewer\", c(\"Suggests\")) }"},{"path":"/reference/darwinLintFile.html","id":null,"dir":"Reference","previous_headings":"","what":"darwinLintFile — darwinLintFile","title":"darwinLintFile — darwinLintFile","text":"Lint given file.","code":""},{"path":"/reference/darwinLintFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"darwinLintFile — darwinLintFile","text":"","code":"darwinLintFile(fileName)"},{"path":"/reference/darwinLintFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"darwinLintFile — darwinLintFile","text":"fileName Path file lint","code":""},{"path":"/reference/darwinLintFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"darwinLintFile — darwinLintFile","text":"list lint objects.","code":""},{"path":"/reference/darwinLintFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"darwinLintFile — darwinLintFile","text":"","code":"darwinLintFile(   fileName = system.file(package = \"DependencyReviewer\", \"testScript.R\")) #> C:\\Users\\mvankessel\\AppData\\Local\\R\\win-library\\4.2\\DependencyReviewer\\testScript.R:45:81: style: [line_length_linter] Lines should not be more than 80 characters. #>       file = \"https://raw.githubusercontent.com/mvankessel-EMC/DependencyReviewerWhitelists/main/dependencies.csv\", #> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #> C:\\Users\\mvankessel\\AppData\\Local\\R\\win-library\\4.2\\DependencyReviewer\\testScript.R:52:21: warning: [object_usage_linter] no visible binding for global variable 'Package' #>       dplyr::select(Package, Built) %>% #>                     ^~~~~~~ #> C:\\Users\\mvankessel\\AppData\\Local\\R\\win-library\\4.2\\DependencyReviewer\\testScript.R:52:21: warning: [object_usage_linter] no visible binding for global variable 'Package' #>       dplyr::select(Package, Built) %>% #>                     ^~~~~~~ #> C:\\Users\\mvankessel\\AppData\\Local\\R\\win-library\\4.2\\DependencyReviewer\\testScript.R:52:30: warning: [object_usage_linter] no visible binding for global variable 'Built' #>       dplyr::select(Package, Built) %>% #>                              ^~~~~ #> C:\\Users\\mvankessel\\AppData\\Local\\R\\win-library\\4.2\\DependencyReviewer\\testScript.R:52:30: warning: [object_usage_linter] no visible binding for global variable 'Built' #>       dplyr::select(Package, Built) %>% #>                              ^~~~~ #> C:\\Users\\mvankessel\\AppData\\Local\\R\\win-library\\4.2\\DependencyReviewer\\testScript.R:70:81: style: [line_length_linter] Lines should not be more than 80 characters. #>       file = \"https://raw.githubusercontent.com/OHDSI/Hades/main/extras/packages.csv\", #> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~ #> C:\\Users\\mvankessel\\AppData\\Local\\R\\win-library\\4.2\\DependencyReviewer\\testScript.R:72:33: warning: [object_usage_linter] no visible binding for global variable 'name' #>       header = TRUE) %>% select(name) %>% #>                                 ^~~~ #> C:\\Users\\mvankessel\\AppData\\Local\\R\\win-library\\4.2\\DependencyReviewer\\testScript.R:72:33: warning: [object_usage_linter] no visible binding for global variable 'name' #>       header = TRUE) %>% select(name) %>% #>                                 ^~~~ #> C:\\Users\\mvankessel\\AppData\\Local\\R\\win-library\\4.2\\DependencyReviewer\\testScript.R:72:39: style: [pipe_continuation_linter] `%>%` should always have a space before it and a new line after it, unless the full pipeline fits on one line. #>       header = TRUE) %>% select(name) %>% #>                                       ^~~ #> C:\\Users\\mvankessel\\AppData\\Local\\R\\win-library\\4.2\\DependencyReviewer\\testScript.R:90:16: warning: [object_usage_linter] no visible binding for global variable 'package' #>         select(package, version)) #>                ^~~~~~~"},{"path":"/reference/darwinLintPackage.html","id":null,"dir":"Reference","previous_headings":"","what":"darwinLintPackage — darwinLintPackage","title":"darwinLintPackage — darwinLintPackage","text":"Darwin lintr object, using default lintr object camelCase","code":""},{"path":"/reference/darwinLintPackage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"darwinLintPackage — darwinLintPackage","text":"","code":"darwinLintPackage()"},{"path":"/reference/darwinLintPackage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"darwinLintPackage — darwinLintPackage","text":"List lint objects.","code":""},{"path":"/reference/darwinLintPackage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"darwinLintPackage — darwinLintPackage","text":"","code":"darwinLintPackage() #> R\\checkDependencies.R:30:32: style: [infix_spaces_linter] Put spaces around all infix operators. #>     dplyr::rename(\"version_rec\"=\"version\") %>% #>                                ^ #> R\\checkDependencies.R:49:3: style: [object_name_linter] Variable and function name style should be camelCase. #>   not_permitted <- dependencies %>% #>   ^~~~~~~~~~~~~ #> R\\checkDependencies.R:49:3: warning: [object_usage_linter] local variable 'not_permitted' assigned but may not be used #>   not_permitted <- dependencies %>% #>   ^~~~~~~~~~~~~ #> R\\checkDependencies.R:67:34: style: [object_name_linter] Variable and function name style should be camelCase. #> messagePermission <- function(i, not_permitted) { #>                                  ^~~~~~~~~~~~~ #> R\\checkDependencies.R:113:5: style: [spaces_left_parentheses_linter] Place a space before left parenthesis, except in a function call. #>   if(is.null(packageName)) { #>     ^ #> R\\checkDependencies.R:126:3: style: [object_name_linter] Variable and function name style should be camelCase. #>   not_permitted <- getNotPermitted(dependencies, permittedPackages) #>   ^~~~~~~~~~~~~ #> R\\checkDependencies.R:128:3: style: [object_name_linter] Variable and function name style should be camelCase. #>   n_not_permitted <- length(not_permitted) #>   ^~~~~~~~~~~~~~~ #> R\\checkDependencies.R:134:5: style: [spaces_left_parentheses_linter] Place a space before left parenthesis, except in a function call. #>   if(n_not_permitted == 0) { #>     ^ #> R\\checkDependencies.R:157:81: style: [line_length_linter] Lines should not be more than 80 characters. #>             dplyr::select(.data$package, version, date, .data$downloads_last_month, #> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~ #> R\\checkDependencies.R:161:81: style: [line_length_linter] Lines should not be more than 80 characters. #>     example$url <- stringr::str_replace_all(string = example$url, pattern = \",\\\\\\n\", replacement = \" \") #> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~ #> R\\checkDependencies.R:164:81: style: [line_length_linter] Lines should not be more than 80 characters. #>     \"{.emph Please create a new issue at https://github.com/mvankessel-EMC/DependencyReviewerWhitelists/ #> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~ #> R\\checkDependencies.R:178:4: style: [commented_code_linter] Commented code should be removed. #>   #n_diffVersions <- length(diffVersions$package) #>    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #> R\\checkDependencies.R:189:7: style: [commented_code_linter] Commented code should be removed. #>   #   cli::cli_div(theme = list (.alert = list(color = \"red\"))) #>       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #> R\\checkDependencies.R:193:7: style: [commented_code_linter] Commented code should be removed. #>   #   cli::cli_end() #>       ^~~~~~~~~~~~~~ #> R\\checkDependencies.R:200:7: style: [commented_code_linter] Commented code should be removed. #>   #   cli::cli_alert_warning(\"Please require recommended versions\") #>       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #> R\\getDefaultPermittedPackages.R:52:81: style: [line_length_linter] Lines should not be more than 80 characters. #>       file = \"https://raw.githubusercontent.com/mvankessel-EMC/DependencyReviewerWhitelists/main/dependencies.csv\", #> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #> R\\getDefaultPermittedPackages.R:79:81: style: [line_length_linter] Lines should not be more than 80 characters. #>       file = \"https://raw.githubusercontent.com/OHDSI/Hades/main/extras/packages.csv\", #> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~ #> R\\getDefaultPermittedPackages.R:81:45: style: [pipe_continuation_linter] `%>%` should always have a space before it and a new line after it, unless the full pipeline fits on one line. #>       header = TRUE) %>% select(.data$name) %>% #>                                             ^~~ #> R\\getGraphData.R:8:81: style: [line_length_linter] Lines should not be more than 80 characters. #> #'     Types of packages to be included in the result. Default: c(\"imports\", \"depends\") #> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~ #> R\\getGraphData.R:9:81: style: [line_length_linter] Lines should not be more than 80 characters. #> #'     Available types are: \"imports\", \"depends\", \"suggests\", \"enhances\", \"linkingto\" #> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~ #> R\\getGraphData.R:22:47: style: [object_name_linter] Variable and function name style should be camelCase. #> getGraphData <- function(path = here::here(), excluded_packages = c(\"\"), package_types = c(\"imports\", \"depends\")) { #>                                               ^~~~~~~~~~~~~~~~~ #> R\\getGraphData.R:22:74: style: [object_name_linter] Variable and function name style should be camelCase. #> getGraphData <- function(path = here::here(), excluded_packages = c(\"\"), package_types = c(\"imports\", \"depends\")) { #>                                                                          ^~~~~~~~~~~~~ #> R\\getGraphData.R:22:81: style: [line_length_linter] Lines should not be more than 80 characters. #> getGraphData <- function(path = here::here(), excluded_packages = c(\"\"), package_types = c(\"imports\", \"depends\")) { #> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #> R\\getGraphData.R:30:9: warning: [seq_linter] 1:nrow(...) is likely to be wrong in the empty edge case. Use seq_len() instead. #>     X = 1:nrow(fData), #>         ^~~~~~~~~~~~~ #> R\\getGraphData.R:37:3: style: [object_name_linter] Variable and function name style should be camelCase. #>   pkg_deps <- dplyr::bind_rows(lapply(X = 1:nrow(fData), FUN = function(row) { #>   ^~~~~~~~ #> R\\getGraphData.R:37:43: warning: [seq_linter] 1:nrow(...) is likely to be wrong in the empty edge case. Use seq_len() instead. #>   pkg_deps <- dplyr::bind_rows(lapply(X = 1:nrow(fData), FUN = function(row) { #>                                           ^~~~~~~~~~~~~ #> R\\getGraphData.R:44:3: style: [object_name_linter] Variable and function name style should be camelCase. #>   pkg_deps <- pkg_deps %>% #>   ^~~~~~~~ #> R\\getGraphData.R:48:3: style: [object_name_linter] Variable and function name style should be camelCase. #>   net_data <- tidygraph::as_tbl_graph( #>   ^~~~~~~~ #> R\\getGraphData.R:48:3: warning: [object_usage_linter] local variable 'net_data' assigned but may not be used #>   net_data <- tidygraph::as_tbl_graph( #>   ^~~~~~~~ #> R\\getGraphData.R:52:1: style: [trailing_blank_lines_linter] Trailing blank lines are superfluous. #>  #> ^ #> R\\summariseFunctionUse.R:33:28: style: [object_name_linter] Variable and function name style should be camelCase. #> funsUsedInLine <- function(file_txt, file_name, i, verbose = FALSE) { #>                            ^~~~~~~~ #> R\\summariseFunctionUse.R:33:38: style: [object_name_linter] Variable and function name style should be camelCase. #> funsUsedInLine <- function(file_txt, file_name, i, verbose = FALSE) { #>                                      ^~~~~~~~~ #> R\\summariseFunctionUse.R:42:5: style: [object_name_linter] Variable and function name style should be camelCase. #>     fun_vec <- unlist(stringr::str_extract_all( #>     ^~~~~~~ #> R\\summariseFunctionUse.R:46:5: style: [object_name_linter] Variable and function name style should be camelCase. #>     fun_vec <- stringr::str_remove_all( #>     ^~~~~~~ #> R\\summariseFunctionUse.R:50:5: style: [object_name_linter] Variable and function name style should be camelCase. #>     fun_vec <- stringr::str_split( #>     ^~~~~~~ #> R\\summariseFunctionUse.R:54:7: style: [spaces_left_parentheses_linter] Place a space before left parenthesis, except in a function call. #>     if(length(fun_vec) > 0) { #>       ^ #> R\\summariseFunctionUse.R:55:7: style: [object_name_linter] Variable and function name style should be camelCase. #>       fun_vec <- lapply( #>       ^~~~~~~ #> R\\summariseFunctionUse.R:58:13: style: [spaces_left_parentheses_linter] Place a space before left parenthesis, except in a function call. #>           if(length(x) == 1) { #>             ^ #> R\\summariseFunctionUse.R:73:9: style: [spaces_left_parentheses_linter] Place a space before left parenthesis, except in a function call. #>       if(verbose == TRUE) { #>         ^ #> R\\summariseFunctionUse.R:93:52: style: [object_name_linter] Variable and function name style should be camelCase. #> funsUsedInFile <- function(files, verbose = FALSE, in_package = TRUE) { #>                                                    ^~~~~~~~~~ #> R\\summariseFunctionUse.R:95:7: style: [spaces_left_parentheses_linter] Place a space before left parenthesis, except in a function call. #>     if(verbose) { #>       ^ #> R\\summariseFunctionUse.R:99:7: style: [spaces_left_parentheses_linter] Place a space before left parenthesis, except in a function call. #>     if(in_package) { #>       ^ #> R\\summariseFunctionUse.R:100:7: style: [object_name_linter] Variable and function name style should be camelCase. #>       file_txt <- readLines(here::here(\"R\", file)) #>       ^~~~~~~~ #> R\\summariseFunctionUse.R:102:7: style: [object_name_linter] Variable and function name style should be camelCase. #>       file_txt <- readLines(file) #>       ^~~~~~~~ #> R\\summariseFunctionUse.R:105:5: warning: [object_usage_linter] local variable 'out' assigned but may not be used #>     out <- sapply( #>     ^~~ #> R\\summariseFunctionUse.R:106:11: warning: [seq_linter] 1:length(...) is likely to be wrong in the empty edge case. Use seq_along() instead. #>       X = 1:length(file_txt), #>           ^~~~~~~~~~~~~~~~~~ #> R\\summariseFunctionUse.R:141:12: style: [object_name_linter] Variable and function name style should be camelCase. #>   function(r_files = list.files(here::here(\"R\")), #>            ^~~~~~~ #> R\\summariseFunctionUse.R:143:12: style: [object_name_linter] Variable and function name style should be camelCase. #>            in_package = TRUE) { #>            ^~~~~~~~~~ #> R\\summariseFunctionUse.R:145:5: style: [object_name_linter] Variable and function name style should be camelCase. #>     deps_used <- funsUsedInFile(r_files, verbose, in_package) #>     ^~~~~~~~~ #> R\\summariseFunctionUse.R:147:9: style: [commented_code_linter] Commented code should be removed. #>     #   stop(paste(r_files, \"not found\")) #>         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #> R\\summariseFunctionUse.R:152:7: style: [object_name_linter] Variable and function name style should be camelCase. #>       deps_used <- tibble( #>       ^~~~~~~~~ #> R\\summariseFunctionUse.R:160:5: style: [object_name_linter] Variable and function name style should be camelCase. #>     deps_used <- dplyr::bind_rows(deps_used) %>% #>     ^~~~~~~~~ #> R\\summariseFunctionUse.R:164:5: style: [object_name_linter] Variable and function name style should be camelCase. #>     deps_used$pkg[deps_used$fun %in% ls(\"package:base\")] <- \"base\" #>     ^~~~~~~~~ #> R\\summariseFunctionUse.R:167:1: style: [trailing_blank_lines_linter] Trailing blank lines are superfluous. #>  #> ^ #> inst\\shinyApp\\server.R:22:5: style: [commented_code_linter] Commented code should be removed. #>   # DependencyReviewer::darwinLintScore(DependencyReviewer::darwinLintPackage) #>     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #> inst\\shinyApp\\server.R:40:81: style: [line_length_linter] Lines should not be more than 80 characters. #>       DependencyReviewer::summariseFunctionUse(r_files = list.files(here::here(\"R\"))) %>% #> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~ #> inst\\shinyApp\\server.R:51:81: style: [line_length_linter] Lines should not be more than 80 characters. #>       DependencyReviewer::summariseFunctionUse(r_files = list.files(here::here(\"R\"))) #> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~ #> inst\\shinyApp\\server.R:71:31: style: [object_name_linter] Variable and function name style should be camelCase. #>                               data_sub <- data %>% #>                               ^~~~~~~~ #> inst\\shinyApp\\server.R:78:81: style: [line_length_linter] Lines should not be more than 80 characters. #>                                               mapping = ggplot2::aes(x = fun, y = n, fill = pkg)) + #> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~ #> inst\\shinyApp\\server.R:85:81: style: [line_length_linter] Lines should not be more than 80 characters. #>                                                axis.text.x = (ggplot2::element_text( #> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~ #> inst\\shinyApp\\server.R:157:48: style: [commas_linter] Commas should always have a space after. #>     options <- names(tail(igraph::V(graphData),-1)) #>                                                ^ #> inst\\shinyApp\\server.R:203:7: style: [commented_code_linter] Commented code should be removed. #>   #   out <- DependencyReviewer::darwinLintScore(DependencyReviewer::darwinLintPackage) #>       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #> inst\\shinyApp\\server.R:203:81: style: [line_length_linter] Lines should not be more than 80 characters. #>   #   out <- DependencyReviewer::darwinLintScore(DependencyReviewer::darwinLintPackage) #> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~ #> inst\\shinyApp\\server.R:204:7: style: [commented_code_linter] Commented code should be removed. #>   #   return(out) #>       ^~~~~~~~~~~ #> inst\\shinyApp\\server.R:209:9: style: [commented_code_linter] Commented code should be removed. #>   #     shiny::setProgress(value = 0, message = \"Running Lintr on package\") #>         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #> inst\\shinyApp\\server.R:211:9: style: [commented_code_linter] Commented code should be removed. #>   #     out <- DT::datatable(getLintrTable()) #>         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #> inst\\shinyApp\\server.R:213:9: style: [commented_code_linter] Commented code should be removed. #>   #     shiny::setProgress(value = 1, message = \"Supplying output in table\") #>         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #> inst\\shinyApp\\server.R:215:7: style: [commented_code_linter] Commented code should be removed. #>   #   return(out) #>       ^~~~~~~~~~~ #> inst\\shinyApp\\ui.R:31:13: style: [commented_code_linter] Commented code should be removed. #>       #     choices = c(\"ALL\", list.files(here::here(\"R\"))) #>             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #> inst\\shinyApp\\ui.R:38:13: style: [commented_code_linter] Commented code should be removed. #>       #     choices = c(\"base\", \"unknown\") #>             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #> inst\\shinyApp\\ui.R:49:17: style: [commented_code_linter] Commented code should be removed. #>           #     DT::dataTableOutput(\"lintrTable\") #>                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #> inst\\shinyApp\\ui.R:104:81: style: [line_length_linter] Lines should not be more than 80 characters. #>                   choices = c(\"imports\", \"depends\", \"suggests\", \"enhances\", \"linkingto\") #> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~ #> inst\\testScript.R:45:81: style: [line_length_linter] Lines should not be more than 80 characters. #>       file = \"https://raw.githubusercontent.com/mvankessel-EMC/DependencyReviewerWhitelists/main/dependencies.csv\", #> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #> inst\\testScript.R:52:21: warning: [object_usage_linter] no visible binding for global variable 'Package' #>       dplyr::select(Package, Built) %>% #>                     ^~~~~~~ #> inst\\testScript.R:52:21: warning: [object_usage_linter] no visible binding for global variable 'Package' #>       dplyr::select(Package, Built) %>% #>                     ^~~~~~~ #> inst\\testScript.R:52:30: warning: [object_usage_linter] no visible binding for global variable 'Built' #>       dplyr::select(Package, Built) %>% #>                              ^~~~~ #> inst\\testScript.R:52:30: warning: [object_usage_linter] no visible binding for global variable 'Built' #>       dplyr::select(Package, Built) %>% #>                              ^~~~~ #> inst\\testScript.R:70:81: style: [line_length_linter] Lines should not be more than 80 characters. #>       file = \"https://raw.githubusercontent.com/OHDSI/Hades/main/extras/packages.csv\", #> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~ #> inst\\testScript.R:72:33: warning: [object_usage_linter] no visible binding for global variable 'name' #>       header = TRUE) %>% select(name) %>% #>                                 ^~~~ #> inst\\testScript.R:72:33: warning: [object_usage_linter] no visible binding for global variable 'name' #>       header = TRUE) %>% select(name) %>% #>                                 ^~~~ #> inst\\testScript.R:72:39: style: [pipe_continuation_linter] `%>%` should always have a space before it and a new line after it, unless the full pipeline fits on one line. #>       header = TRUE) %>% select(name) %>% #>                                       ^~~ #> inst\\testScript.R:90:16: warning: [object_usage_linter] no visible binding for global variable 'package' #>         select(package, version)) #>                ^~~~~~~ #> tests\\testthat\\test-checkDependencies.R:6:5: style: [commented_code_linter] Commented code should be removed. #> #   expect_message(checkDependencies()) #>     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #> tests\\testthat\\test-darwinLint.R:6:5: style: [commented_code_linter] Commented code should be removed. #> #   expect_type(darwinLintScore(lintFunction = darwinLintPackage), \"list\") #>     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #> tests\\testthat\\test-getDefaultPermittedPackages.R:6:5: style: [commented_code_linter] Commented code should be removed. #> #   expect_type(getDefaultPermittedPackages(), \"list\") #>     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #> vignettes\\Documentation.Rmd:219:20: style: [trailing_whitespace_linter] Trailing whitespace is superfluous. #>   data = funCounts,  #>                    ^ #> vignettes\\Documentation.Rmd:223:15: style: [trailing_whitespace_linter] Trailing whitespace is superfluous. #>     vars(pkg),  #>               ^ #> vignettes\\Documentation.Rmd:224:23: style: [trailing_whitespace_linter] Trailing whitespace is superfluous. #>     scales = \"free_x\",  #>                       ^"},{"path":"/reference/darwinLintScore.html","id":null,"dir":"Reference","previous_headings":"","what":"darwinLintScore — darwinLintScore","title":"darwinLintScore — darwinLintScore","text":"Function scores lintr output percentage per message type (style, warning, error). Lintr messages / lines assessed * 100","code":""},{"path":"/reference/darwinLintScore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"darwinLintScore — darwinLintScore","text":"","code":"darwinLintScore(lintFunction, ...)"},{"path":"/reference/darwinLintScore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"darwinLintScore — darwinLintScore","text":"lintFunction Lint function use ... parameters Lint function might need (.e. file name)","code":""},{"path":"/reference/darwinLintScore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"darwinLintScore — darwinLintScore","text":"tibble percentage scores per type Lint message.","code":""},{"path":"/reference/darwinLintScore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"darwinLintScore — darwinLintScore","text":"","code":"# With darwin file lintr darwinLintScore(   lintFunction = darwinLintFile,   system.file(package = \"DependencyReviewer\", \"testScript.R\")) #> ℹ style: 3.06% of lines of code have linting messages #> ℹ warning: 7.14% of lines of code have linting messages #> # A tibble: 2 × 2 #>   type      pct #>   <chr>   <dbl> #> 1 style    3.06 #> 2 warning  7.14  # With standard package lintr darwinLintScore(   lintFunction = lintr::lint_package,   system.file(package = \"DependencyReviewer\")) #> ℹ 0 Lintr messages found #> # A tibble: 0 × 2 #> # … with 2 variables: type <chr>, pct <dbl>"},{"path":"/reference/DependencyReviewer-package.html","id":null,"dir":"Reference","previous_headings":"","what":"DependencyReviewer: Tool Suite to Investigate Other Packages — DependencyReviewer-package","title":"DependencyReviewer: Tool Suite to Investigate Other Packages — DependencyReviewer-package","text":"Helps investigating packages code review looking dependencies.","code":""},{"path":"/reference/DependencyReviewer-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DependencyReviewer: Tool Suite to Investigate Other Packages — DependencyReviewer-package","text":"Maintainer: Maarten van Kessel m.l.vankessel@erasmusmc.nl","code":""},{"path":"/reference/funsUsedInFile.html","id":null,"dir":"Reference","previous_headings":"","what":"funsUsedInFile — funsUsedInFile","title":"funsUsedInFile — funsUsedInFile","text":"Support function","code":""},{"path":"/reference/funsUsedInFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"funsUsedInFile — funsUsedInFile","text":"","code":"funsUsedInFile(files, verbose = FALSE, in_package = TRUE)"},{"path":"/reference/funsUsedInFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"funsUsedInFile — funsUsedInFile","text":"files Files get functions verbose Verbosity in_package default: TRUE","code":""},{"path":"/reference/funsUsedInFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"funsUsedInFile — funsUsedInFile","text":"table","code":""},{"path":"/reference/funsUsedInLine.html","id":null,"dir":"Reference","previous_headings":"","what":"funsUsedInLine — funsUsedInLine","title":"funsUsedInLine — funsUsedInLine","text":"Support function funsUsedInFile.","code":""},{"path":"/reference/funsUsedInLine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"funsUsedInLine — funsUsedInLine","text":"","code":"funsUsedInLine(file_txt, file_name, i, verbose = FALSE)"},{"path":"/reference/funsUsedInLine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"funsUsedInLine — funsUsedInLine","text":"file_txt file use file_name name file line verbose Prints message function found","code":""},{"path":"/reference/funsUsedInLine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"funsUsedInLine — funsUsedInLine","text":"data.frame 3 colums: Package (pkg); Function (fun); Line script (line)","code":""},{"path":"/reference/getDefaultPermittedPackages.html","id":null,"dir":"Reference","previous_headings":"","what":"getDefaultPermittedpackages — getDefaultPermittedPackages","title":"getDefaultPermittedpackages — getDefaultPermittedPackages","text":"Gets permitted packages","code":""},{"path":"/reference/getDefaultPermittedPackages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getDefaultPermittedpackages — getDefaultPermittedPackages","text":"","code":"getDefaultPermittedPackages()"},{"path":"/reference/getDefaultPermittedPackages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"getDefaultPermittedpackages — getDefaultPermittedPackages","text":"tibble two columns (package, version) 'allowed' packages.","code":""},{"path":"/reference/getDefaultPermittedPackages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"getDefaultPermittedpackages — getDefaultPermittedPackages","text":"","code":"# Run only in interactive session if (interactive()) {   getDefaultPermittedPackages() }"},{"path":"/reference/getDiffVersions.html","id":null,"dir":"Reference","previous_headings":"","what":"getDiffVersions — getDiffVersions","title":"getDiffVersions — getDiffVersions","text":"Helper function","code":""},{"path":"/reference/getDiffVersions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getDiffVersions — getDiffVersions","text":"","code":"getDiffVersions(dependencies, permittedPackages)"},{"path":"/reference/getDiffVersions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getDiffVersions — getDiffVersions","text":"dependencies Dependencies permittedPackages permittedPackages","code":""},{"path":"/reference/getDiffVersions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"getDiffVersions — getDiffVersions","text":"versions permitted packages","code":""},{"path":"/reference/getGraphData.html","id":null,"dir":"Reference","previous_headings":"","what":"getGraphData — getGraphData","title":"getGraphData — getGraphData","text":"getGraphData","code":""},{"path":"/reference/getGraphData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getGraphData — getGraphData","text":"","code":"getGraphData(   path = here::here(),   excluded_packages = c(\"\"),   package_types = c(\"imports\", \"depends\") )"},{"path":"/reference/getGraphData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getGraphData — getGraphData","text":"path path excluded_packages Packages exclude package_types Types packages included result. Default: c(\"imports\", \"depends\") Availible types : \"imports\", \"depends\", \"suggests\", \"enhances\", \"linkingto\"","code":""},{"path":"/reference/getGraphData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"getGraphData — getGraphData","text":"net_data graph data","code":""},{"path":"/reference/getGraphData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"getGraphData — getGraphData","text":"","code":"# Only run in interactive session if(interactive()) {   graphData <- getGraphData() }"},{"path":"/reference/getNotPermitted.html","id":null,"dir":"Reference","previous_headings":"","what":"getNotPermitted — getNotPermitted","title":"getNotPermitted — getNotPermitted","text":"Helper function","code":""},{"path":"/reference/getNotPermitted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getNotPermitted — getNotPermitted","text":"","code":"getNotPermitted(dependencies, permittedPackages)"},{"path":"/reference/getNotPermitted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getNotPermitted — getNotPermitted","text":"dependencies Dependencies permittedPackages Packages permitted character vector","code":""},{"path":"/reference/getNotPermitted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"getNotPermitted — getNotPermitted","text":"Returns vector permitted packages","code":""},{"path":"/reference/messagePackageVersion.html","id":null,"dir":"Reference","previous_headings":"","what":"messagePackageVersion — messagePackageVersion","title":"messagePackageVersion — messagePackageVersion","text":"Helper message function","code":""},{"path":"/reference/messagePackageVersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"messagePackageVersion — messagePackageVersion","text":"","code":"messagePackageVersion(i, diffVersions)"},{"path":"/reference/messagePackageVersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"messagePackageVersion — messagePackageVersion","text":"iterator diffVersions different versions","code":""},{"path":"/reference/messagePermission.html","id":null,"dir":"Reference","previous_headings":"","what":"messagePermission — messagePermission","title":"messagePermission — messagePermission","text":"Helper message function","code":""},{"path":"/reference/messagePermission.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"messagePermission — messagePermission","text":"","code":"messagePermission(i, not_permitted)"},{"path":"/reference/messagePermission.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"messagePermission — messagePermission","text":"iterator not_permitted permitted","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"/reference/runShiny.html","id":null,"dir":"Reference","previous_headings":"","what":"runShiny — runShiny","title":"runShiny — runShiny","text":"Runs Shiny app dependency investigation.","code":""},{"path":"/reference/runShiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"runShiny — runShiny","text":"","code":"runShiny()"},{"path":"/reference/runShiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"runShiny — runShiny","text":"object represents app.","code":""},{"path":"/reference/runShiny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"runShiny — runShiny","text":"","code":"# Run only in interactive session if (interactive()) {   runShiny() }"},{"path":"/reference/summariseFunctionUse.html","id":null,"dir":"Reference","previous_headings":"","what":"summariseFunctionUse — summariseFunctionUse","title":"summariseFunctionUse — summariseFunctionUse","text":"Summarise functions used R package","code":""},{"path":"/reference/summariseFunctionUse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summariseFunctionUse — summariseFunctionUse","text":"","code":"summariseFunctionUse(   r_files = list.files(here::here(\"R\")),   verbose = FALSE,   in_package = TRUE )"},{"path":"/reference/summariseFunctionUse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summariseFunctionUse — summariseFunctionUse","text":"r_files r_files verbose Default: FALSE; prints message console file currently worked . in_package Default: TRUE; Indicate function called within package project . TRUE: expects file name \"myFile.R\", may vector multiple. FALSE: expects file path \".//file/path/myFile.R\", vector multiple","code":""},{"path":"/reference/summariseFunctionUse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summariseFunctionUse — summariseFunctionUse","text":"tibble","code":""},{"path":"/reference/summariseFunctionUse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"summariseFunctionUse — summariseFunctionUse","text":"","code":"summariseFunctionUse(   r_files = system.file(package = \"DependencyReviewer\", \"testScript.R\"),   in_package = FALSE) #> # A tibble: 39 × 4 #>    r_file                                                       line pkg   fun   #>    <chr>                                                       <int> <chr> <chr> #>  1 C:/Users/mvankessel/AppData/Local/R/win-library/4.2/Depend…    28 base  func… #>  2 C:/Users/mvankessel/AppData/Local/R/win-library/4.2/Depend…    29 base  list… #>  3 C:/Users/mvankessel/AppData/Local/R/win-library/4.2/Depend…    30 base  temp… #>  4 C:/Users/mvankessel/AppData/Local/R/win-library/4.2/Depend…    34 base  leng… #>  5 C:/Users/mvankessel/AppData/Local/R/win-library/4.2/Depend…    35 base  mess… #>  6 C:/Users/mvankessel/AppData/Local/R/win-library/4.2/Depend…    36 dplyr tibb… #>  7 C:/Users/mvankessel/AppData/Local/R/win-library/4.2/Depend…    36 unkn… read… #>  8 C:/Users/mvankessel/AppData/Local/R/win-library/4.2/Depend…    36 base  retu… #>  9 C:/Users/mvankessel/AppData/Local/R/win-library/4.2/Depend…    39 base  temp… #> 10 C:/Users/mvankessel/AppData/Local/R/win-library/4.2/Depend…    41 base  temp… #> # … with 29 more rows  # Only in an interactive session if (interactive()) {   summariseFunctionUse() }"}]
